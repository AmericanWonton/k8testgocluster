Things to do:

2. Figure out how to make pods from the URL of my docker image 
3. Make sure my application can be accessed properly

Minikube installation:
https://minikube.sigs.k8s.io/docs/start/
What you need:
- 2CPUs or more
2GB of free Memory
20GB of disk space
Internet
Container

How to create environment variables: https://linuxize.com/post/how-to-set-and-list-environment-variables-in-linux/
Might want to make them permanant to your session: https://phoenixnap.com/kb/linux-set-environment-variable

Start our MiniKube: minikube start --driver=docker

See the recently deployed services: minikube service mongo-express-service -n THE-NAMESPACE

Get all resources in a namespace: kubectl get all -n THENAMESPACE

To delete minicluster: minikube delete

To Stop MiniCluster: minikube stop

Create Namespace: kubectl create namespace INSERTNAMESPACE

How to apply a yaml file: kubectl apply -f mongo-express.yaml

How to delete resouces: kubectl resource_type/delete thing_you_wanna_delete
Example: kubectl delete deployments/goproj-deployment

For Ingress, make sure you do the following:
Enable the Ingress service first: 
https://kubernetes.io/docs/tasks/access-application-cluster/ingress-minikube/
minikube addons enable ingress
Then, after enabling it, delete this: kubectl delete -A ValidatingWebhookConfiguration ingress-nginx-admission
because it's causing issues: https://stackoverflow.com/questions/61616203/nginx-ingress-controller-failed-calling-webhook
After the file is finally deployed, you'll need to add taht host and ip address to you /etc/hosts
file: https://stackoverflow.com/questions/51511547/empty-address-kubernetes-ingress

In order for our AWS client to access this cluster, we'll need to learn how to port forward
OKAY, so according to BUNCH of places, you can't easily accept traffic from a virtual machine into a minikube....
geuss that means Ineed to look at production ready resources...